{"version":3,"file":"js/search.js","mappings":"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","sources":["webpack://simplecharm-portfolio-plugin/./src/js/load_search.js","webpack://simplecharm-portfolio-plugin/./src/js/multiselect.js","webpack://simplecharm-portfolio-plugin/webpack/bootstrap","webpack://simplecharm-portfolio-plugin/webpack/runtime/compat get default export","webpack://simplecharm-portfolio-plugin/webpack/runtime/define property getters","webpack://simplecharm-portfolio-plugin/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["(function($){\n    class LoadSearch{\n        constructor(){\n            this.init();\n            this.page = 1;\n        }\n        init(){\n            this.load_posts();\n        }\n\n        load_categories(){\n            let selectedOptions = document.getElementById('categories').selectedOptions;\n            let selectedNames = [];\n\n            for (let i = 0; i < selectedOptions.length; i++) {\n                let nameValue = selectedOptions[i].getAttribute('name');\n                selectedNames.push(nameValue);\n            }\n\n            return selectedNames;\n        }\n\n\n        load_posts(){\n            $('#simplecharm-advanced-search-form').on('submit', (e) => {\n            e.preventDefault();\n            let search_term = $('.search-field').val();\n            let categories = this.load_categories();\n            this.requestPosts(e,search_term,categories,this.page);\n        });\n        }\n        requestPosts(e,search_term,categories,page) {\n            let pagination = $('.simplecharm-searchpage-pagination');\n                pagination.html('');\n\n            let totalPage = 1;\n\n            let apiUrl = new URL('/wp-json/wp/v2/posts', window.location.origin);\n            let params = new URLSearchParams();\n\n            if (search_term) {\n                params.append('search', search_term);\n            }\n\n            if (categories.length > 0) {\n                params.append('categories', categories.join(',')); \n            }\n\n            if(page){\n                params.append('page',page);\n            }\n\n            $('#simplecharm-loading-overlay').show();\n\n             fetch(apiUrl + '?' + params.toString())\n            .then(response => {\n                totalPage = response.headers.get('X-WP-TotalPages');\n                return response.json()\n            })\n            .then(posts => {\n                let resultsContainer = $('#simplecharm-search-page');\n                resultsContainer.html(''); // Clear previous results\n\n                // Check if there are posts\n                if (posts.length > 0) {\n                    posts.forEach(post => {\n                        let date = new Date(post.date);\n                        let options = { year: 'numeric', month: 'long', day: 'numeric' };\n                        post.date = date.toLocaleDateString('en-US', options);\n                        let postdate = post.date;\n                        if((post.title.rendered.length) <= 0){\n                            postdate = `<a href=\"${post.link}\">${post.date}</a>`;\n                        }\n\n                        let postElement = document.createElement('div');\n                        postElement.classList.add(`post-${post.id}`,'simplecharm-text-center', 'simplecharm-content');\n                        postElement.innerHTML = `\n                <h1 class=\"post-title\">\n                    <a href=\"${post.link}\">${post.title.rendered}</a>\n                </h1>\n                <div class=\"post-meta\">\n                    <span class=\"post-date\">\n                    ${postdate}\n                    </span>\n                </div>\n                <div class=\"post-content\">\n                    ${post.excerpt.rendered}\n                </div> `;\n            resultsContainer.append(postElement);\n                    });\n                    if(totalPage > 1){\n                        let pagination = $('.simplecharm-searchpage-pagination');\n                        pagination.html('');\n                        for(let i = 1;i <= totalPage;i++){\n                            let pageBtn = document.createElement('a');\n                            pageBtn.classList.add(i);\n                            pageBtn.classList.add(page == i ? 'active' : 'inactive');\n                            pageBtn.innerText = i;\n                            pagination.append(pageBtn);\n                            pageBtn.addEventListener(\"click\",(e) => {\n                                this.page = !(pageBtn.classList[0]) ? 1 : pageBtn.classList[0];\n                                this.requestPosts(e,search_term,categories,this.page);\n            });\n                        }\n                    }else{\n                        let pagination = $('.simplecharm-searchpage-pagination');\n                        pagination.html('');\n                    }\n                } else {\n                    resultsContainer.innerHTML = `<p class=\"simplecharm-text-center\">No search results found for \"${search_term}\"</p>`;\n                }\n                $('#simplecharm-loading-overlay').hide();\n            })\n            .catch(error => {\n                console.error('Error fetching posts:', error);\n                document.getElementById('simplecharm-search-page').innerHTML = '<p>Error fetching posts.</p>';\n                \n                $('#simplecharm-loading-overlay').hide();\n            });\n        }\n    }\n\n    new LoadSearch;\n\n})(jQuery)","(function($){\n  class Multiselect{\n    constructor(){\n      this.init();\n    }\n\n    init(){\n      this.load_multiselect();\n      this.control_multiselect();\n    }\n\n    load_multiselect(){\n      const list = $('.simplecharm-select-options li');\n\n      list.each(function(){\n        $(this).on( 'click', (e) => {\n          e.preventDefault();\n          let checked = $(this).find('input')[0]; // Get the input element in the clicked li\n            checked.checked = !checked.checked; // Toggle checked state\n\n            if (checked.checked) {\n              $(checked).addClass(\"selected\");\n            } else {\n              $(checked).removeClass(\"selected\");\n            }\n          \n          const option = $(`#${this.className}`); // Get the option corresponding to the clicked li\n            option.prop('selected', checked.checked); // Set selected property correctly\n\n\n         $(`#${this.className}`).selected = checked.checked;\n          const selectedStatus = $(\".simplecharm-select-form p b\");\n          const selectedCount = $(\".selected\");\n\n          if(selectedCount.length){\n            selectedStatus.text(`${selectedCount.length} Category Selected`);\n          }else{\n            selectedStatus.text(`Select Categories`);  \n          }\n        });\n      })\n    }\n\n    control_multiselect(){\n      const selectTitle = $(\".simplecharm-select-form p\");\n      const selectOptions = $(\".simplecharm-select-options\");\n      const selectDropdownIcon = $(\".simplecharm-selectform-dropdown-icon\");\n\n      selectTitle.on(\"click\", function(e){\n        selectOptions.toggleClass(\"multiselect-closed\");\n        selectDropdownIcon.toggleClass(\"multiselect-open\");\n        selectOptions.toggleClass(\"multiselect-hide\");\n      })\n    }\n\n  }\n\n  new Multiselect;\n})(jQuery)","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["$","jQuery","LoadSearch","_classCallCheck","this","init","page","key","value","load_posts","selectedOptions","document","getElementById","selectedNames","i","length","nameValue","getAttribute","push","_this","on","e","preventDefault","search_term","val","categories","load_categories","requestPosts","_this2","html","totalPage","apiUrl","URL","window","location","origin","params","URLSearchParams","append","join","show","fetch","toString","then","response","headers","get","json","posts","resultsContainer","forEach","post","date","Date","toLocaleDateString","year","month","day","postdate","title","rendered","concat","link","postElement","createElement","classList","add","id","innerHTML","excerpt","pagination","_loop","pageBtn","innerText","addEventListener","hide","catch","error","console","Multiselect","load_multiselect","control_multiselect","each","checked","find","addClass","removeClass","className","prop","selected","selectedStatus","selectedCount","text","selectTitle","selectOptions","selectDropdownIcon","toggleClass","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","obj","prototype","hasOwnProperty","call"],"sourceRoot":""}